{"ast":null,"code":"var _jsxFileName = \"/home/shashank/Downloads/react-meme-master/src/memo.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass memes extends Component {\n  constructor() {\n    super();\n    this.state = {\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: [],\n      showform: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      showform: true\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    const {\n      showform\n    } = this.state;\n    var {\n      randomImg1\n    } = \"\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-grid gap-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      size: \"lg\",\n      onClick: this.onClick,\n      style: {\n        margin: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \" \", \"Generate Meme\"), \"\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }), showform && this.renderform(), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.allMemeImgs.map(allmeme => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"inline-grid\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: allmeme.url,\n      width: 200,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"figcaption\", {\n      style: ({\n        height: 70\n      }, {\n        width: 210\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, allmeme.name)))));\n  }\n\n}\n\nexport default memes;","map":{"version":3,"sources":["/home/shashank/Downloads/react-meme-master/src/memo.js"],"names":["React","Component","Button","memes","constructor","state","randomImg","allMemeImgs","showform","handleChange","bind","handleSubmit","onClick","setState","componentDidMount","fetch","then","response","json","data","render","randomImg1","margin","renderform","map","allmeme","display","url","height","width","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAO,sCAAP;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC1BG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,+BADA;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,OAAL,GAAe,KAAKA,OAAL,CAAaF,IAAb,CAAkB,IAAlB,CAAf;AACD;;AACDE,EAAAA,OAAO,GAAG;AACR,SAAKC,QAAL,CAAc;AAAEL,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACD;;AACDM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClB,YAAM;AAAEd,QAAAA;AAAF,UAAYc,QAAQ,CAACE,IAA3B;AACA,WAAKN,QAAL,CAAc;AAAEN,QAAAA,WAAW,EAAEJ;AAAf,OAAd;AACD,KALH;AAMD;;AACDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAe,KAAKH,KAA1B;AACA,QAAI;AAAEgB,MAAAA;AAAF,QAAiB,EAArB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,SADV;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,OAAO,EAAE,KAAKT,OAHhB;AAIE,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE;AAAV,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,kBADF,EAUG,EAVH,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAaGd,QAAQ,IAAI,KAAKe,UAAL,EAbf,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWE,WAAX,CAAuBiB,GAAvB,CAA4BC,OAAD,iBAC1B;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAED,OAAO,CAACE,GAAlB;AAAuB,MAAA,KAAK,EAAE,GAA9B;AAAmC,MAAA,MAAM,EAAE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAY,MAAA,KAAK,GAAG;AAAEC,QAAAA,MAAM,EAAE;AAAV,SAAgB;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAnB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,OAAO,CAACK,IADX,CAFF,CADD,CADH,CAhBF,CADF;AA8BD;;AAxDuB;;AA2D9B,eAAe3B,KAAf","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass memes extends Component {\n    constructor() {\n        super();\n        this.state = {\n          randomImg: \"http://i.imgflip.com/1bij.jpg\",\n          allMemeImgs: [],\n          showform: false,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.onClick = this.onClick.bind(this);\n      }\n      onClick() {\n        this.setState({ showform: true });\n      }\n      componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n          .then((response) => response.json())\n          .then((response) => {\n            const { memes } = response.data;\n            this.setState({ allMemeImgs: memes });\n          });\n      }\n      render() {\n        const { showform } = this.state;\n        var { randomImg1 } = \"\";\n        return (\n          <div className=\"d-grid gap-2\">\n            <Button\n              variant=\"primary\"\n              size=\"lg\"\n              onClick={this.onClick}\n              style={{ margin: 14 }}\n            >\n              {\" \"}\n              Generate Meme\n            </Button>\n            {\"\"}\n    \n            <br />\n            {showform && this.renderform()}\n    \n            <br />\n            <div>\n              {this.state.allMemeImgs.map((allmeme) => (\n                <div style={{ display: \"inline-grid\" }}>\n                  <img src={allmeme.url} width={200} height={200} />\n                  <figcaption style={({ height: 70 }, { width: 210 })}>\n                    {allmeme.name}\n                   \n                  </figcaption>\n                </div>\n              ))}\n            </div>\n          </div>\n        );\n      }\n    }\n \nexport default memes;"]},"metadata":{},"sourceType":"module"}