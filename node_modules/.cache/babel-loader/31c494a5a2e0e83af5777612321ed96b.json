{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar clipboard_copy_1 = __importDefault(require(\"clipboard-copy\"));\n\nvar react_1 = require(\"react\");\n\nvar useTimedToggle_1 = require(\"./useTimedToggle\");\n\nfunction isInputLike(node) {\n  return node && (node.nodeName === 'TEXTAREA' || node.nodeName === 'INPUT');\n}\n\nfunction useClipboard(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = useTimedToggle_1.useTimedToggle(false),\n      copied = _a[0],\n      toggleCopied = _a[1];\n\n  var targetRef = react_1.useRef(null);\n\n  function clipboardCopy(text) {\n    clipboard_copy_1.default(text).then(handleSuccess).catch(handleError);\n  }\n\n  function handleSuccess() {\n    if (options.onSuccess) {\n      options.onSuccess();\n    }\n\n    if (options.copiedTimeout) {\n      toggleCopied(options.copiedTimeout);\n    }\n\n    if (options.selectOnCopy && isInputLike(targetRef.current)) {\n      targetRef.current.select();\n    }\n  }\n\n  function handleError() {\n    if (options.onError) {\n      options.onError();\n    }\n\n    var selectOnError = options.selectOnError !== false;\n\n    if (selectOnError && isInputLike(targetRef.current)) {\n      targetRef.current.select();\n    }\n  }\n\n  function isSupported() {\n    return !!(navigator.clipboard || document.execCommand && document.queryCommandSupported && document.queryCommandSupported('copy'));\n  }\n\n  var copyHandler = react_1.useCallback(function (text) {\n    if (typeof text === 'string') {\n      clipboardCopy(text);\n    } else if (targetRef.current) {\n      clipboardCopy(targetRef.current.value);\n    }\n  }, []);\n  return {\n    copied: copied,\n    copy: copyHandler,\n    isSupported: isSupported,\n    target: targetRef\n  };\n}\n\nexports.useClipboard = useClipboard;","map":{"version":3,"sources":["/home/shashank/Downloads/react-meme-master/node_modules/use-clipboard-copy/dist/index.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","clipboard_copy_1","require","react_1","useTimedToggle_1","isInputLike","node","nodeName","useClipboard","options","_a","useTimedToggle","copied","toggleCopied","targetRef","useRef","clipboardCopy","text","default","then","handleSuccess","catch","handleError","onSuccess","copiedTimeout","selectOnCopy","current","select","onError","selectOnError","isSupported","navigator","clipboard","document","execCommand","queryCommandSupported","copyHandler","useCallback","copy","target"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar clipboard_copy_1 = __importDefault(require(\"clipboard-copy\"));\nvar react_1 = require(\"react\");\nvar useTimedToggle_1 = require(\"./useTimedToggle\");\nfunction isInputLike(node) {\n    return node && (node.nodeName === 'TEXTAREA' || node.nodeName === 'INPUT');\n}\nfunction useClipboard(options) {\n    if (options === void 0) { options = {}; }\n    var _a = useTimedToggle_1.useTimedToggle(false), copied = _a[0], toggleCopied = _a[1];\n    var targetRef = react_1.useRef(null);\n    function clipboardCopy(text) {\n        clipboard_copy_1.default(text)\n            .then(handleSuccess)\n            .catch(handleError);\n    }\n    function handleSuccess() {\n        if (options.onSuccess) {\n            options.onSuccess();\n        }\n        if (options.copiedTimeout) {\n            toggleCopied(options.copiedTimeout);\n        }\n        if (options.selectOnCopy && isInputLike(targetRef.current)) {\n            targetRef.current.select();\n        }\n    }\n    function handleError() {\n        if (options.onError) {\n            options.onError();\n        }\n        var selectOnError = options.selectOnError !== false;\n        if (selectOnError && isInputLike(targetRef.current)) {\n            targetRef.current.select();\n        }\n    }\n    function isSupported() {\n        return !!(navigator.clipboard ||\n            (document.execCommand &&\n                document.queryCommandSupported &&\n                document.queryCommandSupported('copy')));\n    }\n    var copyHandler = react_1.useCallback(function (text) {\n        if (typeof text === 'string') {\n            clipboardCopy(text);\n        }\n        else if (targetRef.current) {\n            clipboardCopy(targetRef.current.value);\n        }\n    }, []);\n    return {\n        copied: copied,\n        copy: copyHandler,\n        isSupported: isSupported,\n        target: targetRef,\n    };\n}\nexports.useClipboard = useClipboard;\n"]},"metadata":{},"sourceType":"script"}