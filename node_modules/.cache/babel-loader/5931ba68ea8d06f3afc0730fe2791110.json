{"ast":null,"code":"var _jsxFileName = \"/home/shashank/Downloads/react-meme-master/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Meme } from \"./Meme/Meme\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { MemeGenerated } from \"./MemeGenerated/MemeGenerated\";\nimport Footer from \"./components/Footer\";\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showApi: true,\n      showform: false,\n      allMemeImgs: []\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.setState({\n      showform: true,\n      showApi: false\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    const {\n      showform\n    } = this.state;\n    const {\n      showApi\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"Shashank Kumar\"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }\n    }, \"React Day 3\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClick,\n      style: {\n        color: 'blue'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"Create your own Memes\"), showApi && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, this.state.allMemeImgs.map(allmeme => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"inline-grid\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: allmeme.url,\n      width: 200,\n      height: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"figcaption\", {\n      style: ({\n        height: 70\n      }, {\n        width: 210\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, allmeme.name)))), showform && /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Meme, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/generated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MemeGenerated, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/shashank/Downloads/react-meme-master/src/App.js"],"names":["React","Component","Meme","Switch","Route","MemeGenerated","Footer","App","constructor","state","showApi","showform","allMemeImgs","onClick","bind","setState","componentDidMount","fetch","then","response","json","memes","data","render","textAlign","color","map","allmeme","display","url","height","width","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Meme } from \"./Meme/Meme\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { MemeGenerated } from \"./MemeGenerated/MemeGenerated\";\nimport Footer from \"./components/Footer\";\n\n\nexport class App extends Component  {\n  constructor() {\n    super();\n    this.state = {\n      showApi:true,\n      showform: false,\n      allMemeImgs: [],\n     \n    };\n    this.onClick = this.onClick.bind(this);}\n  onClick(){\n    this.setState({ showform: true, showApi:false});\n  \n  };\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\")\n      .then((response) => response.json())\n      .then((response) => {\n        const { memes } = response.data;\n        this.setState({ allMemeImgs: memes });\n      });\n  }\n  render(){\n    const { showform } = this.state;\n    const { showApi } = this.state;\n  return (\n    <div>\n      <h1 style={{textAlign:'center'}}>\n        Shashank Kumar\n        </h1>\n    <h1 style={{textAlign:'center'}}>\n       React Day 3\n      </h1>\n      <button onClick={this.onClick} style={{color:'blue'}}>\n        Create your own Memes\n        </button>\n        {showApi && <div>\n          {this.state.allMemeImgs.map((allmeme) => (\n            <div style={{ display: \"inline-grid\" }}>\n              <img src={allmeme.url} width={200} height={200} />\n              <figcaption style={({ height: 70 }, { width: 210 })}>\n                {allmeme.name}\n              </figcaption>\n            </div>\n          ))}\n        </div>}\n        {showform && \n      (<Switch>\n         <Route exact path=\"/\">\n          <Meme />\n        </Route> \n        <Route path=\"/generated\">\n          <MemeGenerated />\n        </Route>\n        <Footer />\n      </Switch>\n      )}\n       \n    </div>\n  );\n}};\n"]},"metadata":{},"sourceType":"module"}